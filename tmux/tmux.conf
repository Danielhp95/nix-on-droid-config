# --------- WELCOME TO MY .tmux.conf ! --------- "

# }}}
# UI Layout & Colourscheme{{{

# To hush neovim complaint
set-option -sa terminal-overrides ',xterm-256color:Tc'

# Statusline options
set-option -g status-position top # Sets the statusline on the top of the screen.
set -g status-style bg=terminal

set -g renumber-windows on
set -g status-keys vi
set -g status-interval 2
set -g status-left-length  0
set -g status-right-length 0
set -g automatic-rename on
set -g automatic-rename-format "#{b:pane_current_path}"

set -g window-status-separator ""
set -g window-status-format "#[fg=colour004,bg=terminal,reverse]"
# Do a thing with #{?window_last_flag, , } to make the chevron change to colour003 if is last
set -ga window-status-format "#[fg=colour004,bold,bg=terminal,reverse] #I#{?window_zoomed_flag, Z,}#{?window_last_flag, L,} #W "
set -ga window-status-format "#[fg=colour004,bg=terminal,noreverse]"
set -g window-status-current-format "#[fg=colour003,bg=terminal,reverse,bold]"
set -ga window-status-current-format "#[fg=black,bg=colour003,noreverse] #I#{?window_zoomed_flag, Z,} #[fg=colour003,bg=colour005,noreverse]#[fg=black,bg=colour005,noreverse] #W #[fg=colour005,bg=terminal]"

set -g status-left "#{?client_prefix,#[bg=colour005],#[bg=colour003]}#[fg=colour000,bold] #S #{?client_prefix,#[fg=colour005],#[fg=colour003]}#[bg=terminal]"
# Git branch on statusbar
# set -ga status-left ' #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) '
set -g status-right ""
set -ga status-right "#(gitmux -cfg ~/.gitmux.conf '#{pane_current_path}')"

# Do you wanna know what is your colour scheme? there you have it now!
#set -ga status-right "#[fg=colour001,bg=terminal] #{pane_current_path}"
set -ga status-right "#[fg=colour001,bg=terminal]"
set -ga status-right "#[fg=colour002,bg=colour001]"
set -ga status-right "#[fg=colour003,bg=colour002]"
set -ga status-right "#[fg=colour004,bg=colour003]"
set -ga status-right "#[fg=colour005,bg=colour004]"
set -ga status-right "#[fg=colour006,bg=colour005]"
set -ga status-right "#[fg=colour007,bg=colour006]"
set -ga status-right "#[fg=colour008,bg=colour007]"
set -ga status-right "#[fg=colour009,bg=colour008]"
set -ga status-right "#[fg=colour010,bg=colour009]"
set -ga status-right "#[fg=colour011,bg=colour010]"
set -ga status-right "#[fg=colour012,bg=colour011]"
set -ga status-right "#[fg=colour013,bg=colour012]"
set -ga status-right "#[fg=colour014,bg=colour013]"
set -ga status-right "#[fg=colour015,bg=colour014]"
set -ga status-right "#[fg=colour016,bg=colour015]"
set -ga status-right "#[fg=colour005,bold,bg=colour016]#[fg=colour003,bold,bg=colour005]#[fg=black,bold,bg=colour003] %H:%M "
# If you wanna know the host. I don't really ever need it
# set -ga status-right "#[fg=colour003]#[fg=black,bg=colour003] #h "

set -g pane-active-border-style "bg=default fg=colour005 bold"
set -g pane-border-style "bg=default fg=colour003 bold"
set -g pane-border-lines double
#set -g pane-border-style "bg=terminal fg=terminal"

set -g display-time 1000
set -g escape-time 20

# }}}
# Key mappings {{{
#
# Set window split
bind-key v split-window -h
bind-key b split-window

# PREFIX mapping
# set-option -g prefix C-a
bind-key C-a last-window

# hjkl pane traversal (vim)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind HL to window traversal
bind H select-window -t :-
bind L select-window -t :+

# Change session "opening" directory
bind M attach-session -c "#{pane_current_path}" \; display-message "Change session directory to #{pane_current_path}"

# Create new window with input name.
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# TODO: Tinker!
# This changes the messages that pop up at the top
set-option -g message-style bg=black
set-option -g message-command-style 'bg=terminal,fg=colour003,bold'

# }}}
# Miscelaneous {{{

# Don't ring any bells. And don't take over the status bar for a measly notification
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# Allows to use the mouse for various actions such as scrolling or changing active pane.
set-option -g mouse on

# Allows for faster key repetition. Don't wait for new keys to be pressed.
set -s escape-time 0

# Start windows and panes index at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Window's name changes according to the process being run on them
set-window-option -g automatic-rename

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# }}}
# PLUGIN: tmux-resurrect {{{

# Restore vim sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'vim nvim ssh npm ~ipython'

# Restore pane contents
set -g @resurrect-capture-pane-contents 'on'

# PLUGIN: tmux-continuum {{{

# Continuum auto restore
set -g @continuum-restore 'on'
# Save every 10 mins
set -g @continuum-save-interval '5'
# }}}

# vim:foldmethod=marker:foldlevel=0
